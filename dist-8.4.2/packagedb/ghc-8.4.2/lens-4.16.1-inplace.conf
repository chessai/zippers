name: lens
version: 4.16.1
id: lens-4.16.1-inplace
key: lens-4.16.1-inplace
license: BSD-2-Clause
copyright: Copyright (C) 2012-2016 Edward A. Kmett
maintainer: Edward A. Kmett <ekmett@gmail.com>
author: Edward A. Kmett
stability: provisional
homepage: http://github.com/ekmett/lens/
synopsis: Lenses, Folds and Traversals
description:
    This package comes \"Batteries Included\" with many useful lenses for the types
    commonly used from the Haskell Platform, and with tools for automatically
    generating lenses and isomorphisms for user-supplied data types.
    .
    The combinators in @Control.Lens@ provide a highly generic toolbox for composing
    families of getters, folds, isomorphisms, traversals, setters and lenses and their
    indexed variants.
    .
    An overview, with a large number of examples can be found in the <https://github.com/ekmett/lens#lens-lenses-folds-and-traversals README>.
    .
    An introductory video on the style of code used in this library by Simon Peyton Jones is available from <http://skillsmatter.com/podcast/scala/lenses-compositional-data-access-and-manipulation Skills Matter>.
    .
    A video on how to use lenses and how they are constructed is available on <http://youtu.be/cefnmjtAolY?hd=1 youtube>.
    .
    Slides for that second talk can be obtained from <http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf comonad.com>.
    .
    More information on the care and feeding of lenses, including a brief tutorial and motivation
    for their types can be found on the <https://github.com/ekmett/lens/wiki lens wiki>.
    .
    A small game of @pong@ and other more complex examples that manage their state using lenses can be found in the <https://github.com/ekmett/lens/blob/master/examples/ example folder>.
    .
    /Lenses, Folds and Traversals/
    .
    With some signatures simplified, the core of the hierarchy of lens-like constructions looks like:
    .
    .
    <<http://i.imgur.com/ALlbPRa.png>>
    .
    <Hierarchy.png (Local Copy)>
    .
    You can compose any two elements of the hierarchy above using @(.)@ from the @Prelude@, and you can
    use any element of the hierarchy as any type it linked to above it.
    .
    The result is their lowest upper bound in the hierarchy (or an error if that bound doesn't exist).
    .
    For instance:
    .
    * You can use any 'Traversal' as a 'Fold' or as a 'Setter'.
    .
    * The composition of a 'Traversal' and a 'Getter' yields a 'Fold'.
    .
    /Minimizing Dependencies/
    .
    If you want to provide lenses and traversals for your own types in your own libraries, then you
    can do so without incurring a dependency on this (or any other) lens package at all.
    .
    /e.g./ for a data type:
    .
    > data Foo a = Foo Int Int a
    .
    You can define lenses such as
    .
    > -- bar :: Lens' (Foo a) Int
    > bar :: Functor f => (Int -> f Int) -> Foo a -> f (Foo a)
    > bar f (Foo a b c) = fmap (\a' -> Foo a' b c) (f a)
    .
    > -- quux :: Lens (Foo a) (Foo b) a b
    > quux :: Functor f => (a -> f b) -> Foo a -> f (Foo b)
    > quux f (Foo a b c) = fmap (Foo a b) (f c)
    .
    without the need to use any type that isn't already defined in the @Prelude@.
    .
    And you can define a traversal of multiple fields with 'Control.Applicative.Applicative':
    .
    > -- traverseBarAndBaz :: Traversal' (Foo a) Int
    > traverseBarAndBaz :: Applicative f => (Int -> f Int) -> Foo a -> f (Foo a)
    > traverseBarAndBaz f (Foo a b c) = Foo <$> f a <*> f b <*> pure c
    .
    What is provided in this library is a number of stock lenses and traversals for
    common haskell types, a wide array of combinators for working them, and more
    exotic functionality, (/e.g./ getters, setters, indexed folds, isomorphisms).
category: Data, Lenses, Generics
abi: inplace
exposed: True
exposed-modules:
    Control.Exception.Lens Control.Lens Control.Lens.At
    Control.Lens.Combinators Control.Lens.Cons Control.Lens.Each
    Control.Lens.Empty Control.Lens.Equality Control.Lens.Extras
    Control.Lens.Fold Control.Lens.Getter Control.Lens.Indexed
    Control.Lens.Internal Control.Lens.Internal.Bazaar
    Control.Lens.Internal.ByteString Control.Lens.Internal.CTypes
    Control.Lens.Internal.Coerce Control.Lens.Internal.Context
    Control.Lens.Internal.Deque Control.Lens.Internal.Exception
    Control.Lens.Internal.FieldTH Control.Lens.Internal.Fold
    Control.Lens.Internal.Getter Control.Lens.Internal.Indexed
    Control.Lens.Internal.Instances Control.Lens.Internal.Iso
    Control.Lens.Internal.Level Control.Lens.Internal.List
    Control.Lens.Internal.Magma Control.Lens.Internal.Prism
    Control.Lens.Internal.PrismTH Control.Lens.Internal.Review
    Control.Lens.Internal.Setter Control.Lens.Internal.TH
    Control.Lens.Internal.Zoom Control.Lens.Iso Control.Lens.Lens
    Control.Lens.Level Control.Lens.Operators Control.Lens.Plated
    Control.Lens.Prism Control.Lens.Reified Control.Lens.Review
    Control.Lens.Setter Control.Lens.TH Control.Lens.Traversal
    Control.Lens.Tuple Control.Lens.Type Control.Lens.Unsound
    Control.Lens.Wrapped Control.Lens.Zoom Control.Monad.Error.Lens
    Control.Parallel.Strategies.Lens Control.Seq.Lens Data.Array.Lens
    Data.Bits.Lens Data.ByteString.Lazy.Lens Data.ByteString.Lens
    Data.ByteString.Strict.Lens Data.Complex.Lens Data.Data.Lens
    Data.Dynamic.Lens Data.HashSet.Lens Data.IntSet.Lens Data.List.Lens
    Data.Map.Lens Data.Sequence.Lens Data.Set.Lens Data.Text.Lazy.Lens
    Data.Text.Lens Data.Text.Strict.Lens Data.Tree.Lens
    Data.Typeable.Lens Data.Vector.Generic.Lens Data.Vector.Lens
    GHC.Generics.Lens Language.Haskell.TH.Lens Numeric.Lens
    Numeric.Natural.Lens System.Exit.Lens System.FilePath.Lens
    System.IO.Error.Lens
hidden-modules: Paths_lens
import-dirs: /home/dcartwright/v6/zippers/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/lens-4.16.1/build
library-dirs: /home/dcartwright/v6/zippers/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/lens-4.16.1/build
dynamic-library-dirs: /home/dcartwright/v6/zippers/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/lens-4.16.1/build
data-dir: /home/dcartwright/v6/lens
hs-libraries: HSlens-4.16.1-inplace
depends:
    array-0.5.2.0 base-4.11.1.0
    base-orphans-0.7-501e703070b04d523a5341ca2d57db2e65e065361fe7187a87f6687212964905
    bifunctors-5.5.2-ad55b7b2e3e467d32cb22d97a9bcded186952abc93ec65a1df79713e19cbc206
    bytestring-0.10.8.2
    call-stack-0.1.0-593a20920d025c17d6dda70cc913c3375f313d3644d3ffaeded4112f61f9fcee
    comonad-5.0.3-a7e5456192a7dd5ef021fab18f4aab83d09c603ccdb37be04886a54feef45785
    contravariant-1.4.1-118d56088c903be257b67072c17007d8bd0692e6e6e2275bd5b73f44f1caa9f5
    containers-0.5.11.0
    distributive-0.5.3-78ebf98c634c4cbffca20c1891f8b8b46a5806854281a3377649961ecbd55257
    filepath-1.4.2 free-5.0.2-inplace ghc-prim-0.5.2.0
    hashable-1.2.7.0-7eaa47eddd6cf2d4d8cc80375e6729512c4dd2ec6927ed73bb27166a47088732
    kan-extensions-5.1-inplace
    exceptions-0.10.0-25b4fcfca966600bae87f8acc4ac8c0b897f55b61ede437eff857562a3296f4f
    mtl-2.2.2
    parallel-3.2.1.1-c067efe320b3df4bc9c1e4901fa2741df1056232bfc3bd7ddc450819af13bee7
    profunctors-5.2.2-202ef350bba4d1502ff0942b48ead251dc4e3dde49643a5a7b8b113d844a9a4e
    reflection-2.1.3-2965d7dcce1dce8f4cd752019196ebbcc0871722c60c13ff0c93b34cd31e85cb
    semigroupoids-6.0-inplace
    semigroups-0.18.4-628587bb5989209cc6b2a94a5b4c11fcfc01c973309c50eb917f09b339988a11
    tagged-0.8.5-48a05f3c8c3686c21a3a90df7cecbb4bbdc68cd17b79a4b5c540c3e1dff0114e
    template-haskell-2.13.0.0
    th-abstraction-0.2.6.0-56304b59210ce58233364b3fe976fda7b26696a44ace47625a1aa4f78b81587b
    text-1.2.3.0 transformers-0.5.5.0
    transformers-compat-0.6.2-2bb7083aa84d7d886c2a363d94bb43444a6021cd551c0339a6b8bb778f37578f
    unordered-containers-0.2.9.0-ecc648eece4c37054ad2c40ec52f38780da4df9ccd5d2be78ab98c2e465f2aee
    vector-0.12.0.1-fc4bed92eb04e7964a6f48b947b13bb9d6c9b4972f538a0da78bb9d2e073f4da
    void-0.7.2-e3eda86efa25c68f644670b49b4bd7883b0f103807d3584f15246cbe6050ac4a
abi-depends: array-0.5.2.0=59560c027ff6ea5b7e467a38c579b575
             base-4.11.1.0=ecd125f03c784a67b61c9a8f6dd222e4
             base-orphans-0.7-501e703070b04d523a5341ca2d57db2e65e065361fe7187a87f6687212964905=a08a60fe63ea19d05f183c90e760a9d2
             bifunctors-5.5.2-ad55b7b2e3e467d32cb22d97a9bcded186952abc93ec65a1df79713e19cbc206=0958b786d1397c63f9ad8072c8916a6e
             bytestring-0.10.8.2=c1695cedf0cebf0c12d34c90fb94a65f
             call-stack-0.1.0-593a20920d025c17d6dda70cc913c3375f313d3644d3ffaeded4112f61f9fcee=e421b23ea7888e40bb079728797354e0
             comonad-5.0.3-a7e5456192a7dd5ef021fab18f4aab83d09c603ccdb37be04886a54feef45785=6fe99e29980f827985122481bae30262
             contravariant-1.4.1-118d56088c903be257b67072c17007d8bd0692e6e6e2275bd5b73f44f1caa9f5=c868f86b5727a70b501b0abf48c4a038
             containers-0.5.11.0=f8334bacfaf0e925ca7b24fb26fb2e66
             distributive-0.5.3-78ebf98c634c4cbffca20c1891f8b8b46a5806854281a3377649961ecbd55257=6291ddbfc6d3c118bca50f66bc6fa509
             filepath-1.4.2=a70b79acbde9ca897bdc5eadf9254ba7
             free-5.0.2-inplace=inplace
             ghc-prim-0.5.2.0=a22477c99003a90dd639dbfd07997615
             hashable-1.2.7.0-7eaa47eddd6cf2d4d8cc80375e6729512c4dd2ec6927ed73bb27166a47088732=bb380ed37e6cafeddb91216c01f9a007
             kan-extensions-5.1-inplace=inplace
             exceptions-0.10.0-25b4fcfca966600bae87f8acc4ac8c0b897f55b61ede437eff857562a3296f4f=48bb874e37e3f98c06d2304e491a9ac4
             mtl-2.2.2=a7bec7c72de63625528e8aa4479db2c8
             parallel-3.2.1.1-c067efe320b3df4bc9c1e4901fa2741df1056232bfc3bd7ddc450819af13bee7=62062d63e312ff3589e028a8fd3e8960
             profunctors-5.2.2-202ef350bba4d1502ff0942b48ead251dc4e3dde49643a5a7b8b113d844a9a4e=3c02d66dd196da1e44962548025035df
             reflection-2.1.3-2965d7dcce1dce8f4cd752019196ebbcc0871722c60c13ff0c93b34cd31e85cb=d3a6fdd4eb8a50143b4390a2b2301bf6
             semigroupoids-6.0-inplace=inplace
             semigroups-0.18.4-628587bb5989209cc6b2a94a5b4c11fcfc01c973309c50eb917f09b339988a11=a7ff0be4999c7c4357a1e4655b5664bf
             tagged-0.8.5-48a05f3c8c3686c21a3a90df7cecbb4bbdc68cd17b79a4b5c540c3e1dff0114e=db034a3896d00699009330a1029a1cd1
             template-haskell-2.13.0.0=b25d144eee230069f091d0d8982b331b
             th-abstraction-0.2.6.0-56304b59210ce58233364b3fe976fda7b26696a44ace47625a1aa4f78b81587b=78d1d705a632c8425eb936280f01e0dc
             text-1.2.3.0=5654b56910ce698015ec900075c28f62
             transformers-0.5.5.0=02be5c4dc3fdc926cf1b36bd484a25f8
             transformers-compat-0.6.2-2bb7083aa84d7d886c2a363d94bb43444a6021cd551c0339a6b8bb778f37578f=e6141422063a2b3df0194ad4c452780c
             unordered-containers-0.2.9.0-ecc648eece4c37054ad2c40ec52f38780da4df9ccd5d2be78ab98c2e465f2aee=862e723a491f7f6784004d62c7f507de
             vector-0.12.0.1-fc4bed92eb04e7964a6f48b947b13bb9d6c9b4972f538a0da78bb9d2e073f4da=6ce37dc90333a24d0039156665118baf
             void-0.7.2-e3eda86efa25c68f644670b49b4bd7883b0f103807d3584f15246cbe6050ac4a=63a5dcae2ff2938176629f5cb1089e3d
haddock-interfaces: /home/dcartwright/v6/zippers/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/lens-4.16.1/doc/html/lens/lens.haddock
haddock-html: /home/dcartwright/v6/zippers/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/lens-4.16.1/doc/html/lens
